module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = {
  1: 'bulbasaur',
  10: 'caterpie',
  100: 'voltorb',
  101: 'electrode',
  102: 'exeggcute',
  103: 'exeggutor',
  104: 'cubone',
  105: 'marowak',
  106: 'hitmonlee',
  107: 'hitmonchan',
  108: 'lickitung',
  109: 'koffing',
  11: 'metapod',
  110: 'weezing',
  111: 'rhyhorn',
  112: 'rhydon',
  113: 'chansey',
  114: 'tangela',
  115: 'kangaskhan',
  116: 'horsea',
  117: 'seadra',
  118: 'goldeen',
  119: 'seaking',
  12: 'butterfree',
  120: 'staryu',
  121: 'starmie',
  122: 'mr. mime',
  123: 'scyther',
  124: 'jynx',
  125: 'electabuzz',
  126: 'magmar',
  127: 'pinsir',
  128: 'tauros',
  129: 'magikarp',
  13: 'weedle',
  130: 'gyarados',
  131: 'lapras',
  132: 'ditto',
  133: 'eevee',
  134: 'vaporeon',
  135: 'jolteon',
  136: 'flareon',
  137: 'porygon',
  138: 'omanyte',
  139: 'omastar',
  14: 'kakuna',
  140: 'kabuto',
  141: 'kabutops',
  142: 'aerodactyl',
  143: 'snorlax',
  144: 'articuno',
  145: 'zapdos',
  146: 'moltres',
  147: 'dratini',
  148: 'dragonair',
  149: 'dragonite',
  15: 'beedrill',
  150: 'mewtwo',
  151: 'mew',
  152: 'chikorita',
  153: 'bayleef',
  154: 'meganium',
  155: 'cyndaquil',
  156: 'quilava',
  157: 'typhlosion',
  158: 'totodile',
  159: 'croconaw',
  16: 'pidgey',
  160: 'feraligatr',
  161: 'sentret',
  162: 'furret',
  163: 'hoothoot',
  164: 'noctowl',
  165: 'ledyba',
  166: 'ledian',
  167: 'spinarak',
  168: 'ariados',
  169: 'crobat',
  17: 'pidgeotto',
  170: 'chinchou',
  171: 'lanturn',
  172: 'pichu',
  173: 'cleffa',
  174: 'igglybuff',
  175: 'togepi',
  176: 'togetic',
  177: 'natu',
  178: 'xatu',
  179: 'mareep',
  18: 'pidgeot',
  180: 'flaaffy',
  181: 'ampharos',
  182: 'bellossom',
  183: 'marill',
  184: 'azumarill',
  185: 'sudowoodo',
  186: 'politoed',
  187: 'hoppip',
  188: 'skiploom',
  189: 'jumpluff',
  19: 'rattata',
  190: 'aipom',
  191: 'sunkern',
  192: 'sunflora',
  193: 'yanma',
  194: 'wooper',
  195: 'quagsire',
  196: 'espeon',
  197: 'umbreon',
  198: 'murkow',
  199: 'slowking',
  2: 'ivysaur',
  20: 'raticate',
  200: 'misdreavus',
  201: 'unown',
  202: 'wobbuffet',
  203: 'girafarig',
  204: 'pineco',
  205: 'forretress',
  206: 'dunsparce',
  207: 'gligar',
  208: 'steelix',
  209: 'snubbull',
  21: 'spearow',
  210: 'granbull',
  211: 'qwilfish',
  212: 'scizor',
  213: 'shuckle',
  214: 'heracross',
  215: 'sneasel',
  216: 'teddiursa',
  217: 'ursaring',
  218: 'slugma',
  219: 'magcargo',
  22: 'fearow',
  220: 'swinub',
  221: 'piloswine',
  222: 'corsola',
  223: 'remoraid',
  224: 'octillery',
  225: 'delibird',
  226: 'mantine',
  227: 'skarmory',
  228: 'houndour',
  229: 'houndoom',
  23: 'ekans',
  230: 'kingdra',
  231: 'phanpy',
  232: 'donphan',
  233: 'porygon2',
  234: 'stantler',
  235: 'smeargle',
  236: 'tyrogue',
  237: 'hitmontop',
  238: 'smoochum',
  239: 'elekid',
  24: 'arbok',
  240: 'magby',
  241: 'miltank',
  242: 'blissey',
  243: 'raikou',
  244: 'entei',
  245: 'suicine',
  246: 'larvitar',
  247: 'pupitar',
  248: 'tyranitar',
  249: 'lugia',
  25: 'pikachu',
  250: 'ho-oh',
  251: 'Celebi',
  252: 'treecko',
  253: 'grovyle',
  254: 'sceptile',
  255: 'torchic',
  256: 'combusken',
  257: 'blaziken',
  258: 'mudkip',
  259: 'marshtomp',
  26: 'raichu',
  260: 'swampert',
  261: 'poochyena',
  262: 'mightyena',
  263: 'zigzagoon',
  264: 'linoone',
  265: 'wurmple',
  266: 'silcoon',
  267: 'beautifly',
  268: 'cascoon',
  269: 'dustox',
  27: 'sandshrew',
  270: 'lotad',
  271: 'lombre',
  272: 'ludicolo',
  273: 'seedot',
  274: 'nuzleaf',
  275: 'shiftry',
  276: 'taillow',
  277: 'swellow',
  278: 'wingull',
  279: 'pelliper',
  28: 'sandslash',
  280: 'ralts',
  281: 'kirlia',
  282: 'gardevoir',
  283: 'surskit',
  284: 'masquerain',
  285: 'shroomish',
  286: 'breloom',
  287: 'slakoth',
  288: 'vigoroth',
  289: 'slaking',
  29: 'nidoranf',
  290: 'nincada',
  291: 'ninjask',
  292: 'shedinja',
  293: 'whismur',
  294: 'loudred',
  295: 'exploud',
  296: 'makuhita',
  297: 'hariyama',
  298: 'azurill',
  299: 'nosepass',
  3: 'venusaur',
  30: 'nidorina',
  300: 'skitty',
  301: 'delcatty',
  302: 'sableye',
  303: 'mawile',
  304: 'aron',
  305: 'lairon',
  306: 'aggron',
  307: 'meditite',
  308: 'medicham',
  309: 'electrike',
  31: 'nidoqueen',
  310: 'manectric',
  311: 'plusle',
  312: 'minun',
  313: 'volbeat',
  314: 'illumise',
  315: 'roselia',
  316: 'gulpin',
  317: 'swalot',
  318: 'carvanha',
  319: 'sharpedo',
  32: 'nidoranm',
  320: 'wailmer',
  321: 'wailord',
  322: 'numel',
  323: 'camerupt',
  324: 'torkoal',
  325: 'spoink',
  326: 'grumpig',
  327: 'spinda',
  328: 'trapinch',
  329: 'vibrava',
  33: 'nidorino',
  330: 'flygon',
  331: 'cacnea',
  332: 'cacturne',
  333: 'swablu',
  334: 'altaria',
  335: 'zangoose',
  336: 'seviper',
  337: 'lunatone',
  338: 'solrock',
  339: 'barboach',
  34: 'nidoking',
  340: 'whiscash',
  341: 'corphish',
  342: 'crawdaunt',
  343: 'baltoy',
  344: 'claydol',
  345: 'lileep',
  346: 'cradily',
  347: 'anorith',
  348: 'armaldo',
  349: 'feebas',
  35: 'clefairy',
  350: 'milotic',
  351: 'castform',
  352: 'kecleon',
  353: 'shuppet',
  354: 'banette',
  355: 'duskull',
  356: 'dusclops',
  357: 'tropius',
  358: 'chimecho',
  359: 'absol',
  36: 'clefable',
  360: 'wynaut',
  361: 'snorunt',
  362: 'glalie',
  363: 'spheal',
  364: 'sealeo',
  365: 'walrein',
  366: 'clamperl',
  367: 'huntail',
  368: 'gorebyss',
  369: 'relicanth',
  37: 'vulpix',
  370: 'luvdisc',
  371: 'bagon',
  372: 'shelgon',
  373: 'salamence',
  374: 'beldum',
  375: 'metang',
  376: 'metagross',
  377: 'regirock',
  378: 'regice',
  379: 'registeel',
  38: 'ninetales',
  380: 'latias',
  381: 'latios',
  382: 'kyogre',
  383: 'groudon',
  384: 'rayquaza',
  385: 'jirachi',
  386: 'deoxys',
  387: 'turtwig',
  388: 'grotle',
  389: 'torterra',
  39: 'jigglypuff',
  390: 'chimchar',
  391: 'monferno',
  392: 'infernape',
  393: 'piplup',
  394: 'prinplup',
  395: 'empoleon',
  396: 'starly',
  397: 'staravia',
  398: 'staraptor',
  399: 'bidoof',
  4: 'charmander',
  40: 'wigglytuff',
  400: 'bibarel',
  401: 'kricketot',
  402: 'kricketune',
  403: 'shinx',
  404: 'luxio',
  405: 'luxray',
  406: 'budew',
  407: 'roserade',
  408: 'cranidos',
  409: 'rampardos',
  41: 'zubat',
  410: 'shieldon',
  411: 'bastiodon',
  412: 'burmy',
  413: 'wormadam',
  414: 'mothim',
  415: 'combee',
  416: 'vespiquen',
  417: 'pachirisu',
  418: 'buizel',
  419: 'floatzel',
  42: 'golbat',
  420: 'cherubi',
  421: 'cherrim',
  422: 'shellos',
  423: 'gastrodon',
  424: 'ambipon',
  425: 'drifloon',
  426: 'drifblim',
  427: 'buneary',
  428: 'lopunny',
  429: 'mismagius',
  43: 'oddish',
  430: 'honchkrow',
  431: 'glameow',
  432: 'purugly',
  433: 'chingling',
  434: 'stunky',
  435: 'skuntank',
  436: 'bronzor',
  437: 'bronzong',
  438: 'bonsly',
  439: 'mime jr.',
  44: 'gloom',
  440: 'happiny',
  441: 'chatot',
  442: 'spiritomb',
  443: 'gible',
  444: 'gabite',
  445: 'garchomp',
  446: 'munchlax',
  447: 'riolu',
  448: 'lucario',
  449: 'hippopotas',
  45: 'vileplume',
  450: 'hippowdon',
  451: 'skorupi',
  452: 'drapion',
  453: 'croagunk',
  454: 'toxicroak',
  455: 'carnivine',
  456: 'finneon',
  457: 'lumineon',
  458: 'mantyke',
  459: 'snover',
  46: 'paras',
  460: 'abomasnow',
  461: 'weavile',
  462: 'magnezone',
  463: 'licklicky',
  464: 'rhyperior',
  465: 'tangrowth',
  466: 'electivire',
  467: 'magmortar',
  468: 'togekiss',
  469: 'yanmega',
  47: 'parasect',
  470: 'leafeon',
  471: 'glaceon',
  472: 'gliscor',
  473: 'mamoswine',
  474: 'porygon-z',
  475: 'gallade',
  476: 'probopass',
  477: 'dusknoir',
  478: 'froslass',
  479: 'rotom',
  48: 'venonat',
  480: 'uxie',
  481: 'mesprit',
  482: 'azelf',
  483: 'dialga',
  484: 'palkia',
  485: 'heatran',
  486: 'regigigas',
  487: 'giratina',
  488: 'cresselia',
  489: 'phione',
  49: 'venomoth',
  490: 'hippopotas',
  491: 'darkrai',
  492: 'shaymin',
  493: 'arceus',
  494: 'victini',
  495: 'snivy',
  496: 'servine',
  497: 'serperior',
  498: 'tepig',
  499: 'pignite',
  5: 'charmeleon',
  50: 'diglett',
  500: 'emboar',
  501: 'oshawott',
  502: 'dewott',
  503: 'samurott',
  504: 'patrat',
  505: 'watchog',
  506: 'lillipup',
  507: 'herdier',
  508: 'stoutland',
  509: 'purrlion',
  51: 'dugtrio',
  510: 'liepard',
  511: 'pansage',
  512: 'simisage',
  513: 'pansear',
  514: 'simisear',
  515: 'panpour',
  516: 'simipour',
  517: 'munna',
  518: 'musharna',
  519: 'pidove',
  52: 'meowth',
  520: 'tranquil',
  521: 'unfezant',
  522: 'blitzle',
  523: 'zebstrika',
  524: 'roggenrola',
  525: 'boldore',
  526: 'gigalith',
  527: 'woobat',
  528: 'swoobat',
  529: 'drilbur',
  53: 'persian',
  530: 'excadrill',
  531: 'audino',
  532: 'timburr',
  533: 'gurdurr',
  534: 'conkeldurr',
  535: 'tympole',
  536: 'palpitoad',
  537: 'seismitoad',
  538: 'throh',
  539: 'sawk',
  54: 'psyduck',
  540: 'sewaddle',
  541: 'swadloon',
  542: 'leavanny',
  543: 'venipede',
  544: 'whirlipede',
  545: 'scolipede',
  546: 'cottonee',
  547: 'Whimsicott',
  548: 'Petilil',
  549: 'lilligant',
  55: 'golduck',
  550: 'basculin',
  551: 'sandile',
  552: 'krokorok',
  553: 'krookodile',
  554: 'darumaka',
  555: 'darmanitan',
  556: 'maractus',
  557: 'dwebble',
  558: 'crustle',
  559: 'scraggy',
  56: 'mankey',
  560: 'scrafty',
  561: 'sigilyph',
  562: 'yamask',
  563: 'cofagrigus',
  564: 'tirtouga',
  565: 'carracosta',
  566: 'archen',
  567: 'archeops',
  568: 'trubbish',
  569: 'garbodor',
  57: 'primeape',
  570: 'zorua',
  571: 'zoroark',
  572: 'minccino',
  573: 'cinccino',
  574: 'gothita',
  575: 'gothorita',
  576: 'gothitelle',
  577: 'solosis',
  578: 'duosion',
  579: 'reuniclus',
  58: 'growlithe',
  580: 'ducklett',
  581: 'swanna',
  582: 'vanillite',
  583: 'vanillish',
  584: 'vanilluxe',
  585: 'deerling',
  586: 'sawsbuck',
  587: 'emolga',
  588: 'karrablast',
  589: 'escavalier',
  59: 'arcanine',
  590: 'foongus',
  591: 'amoonguss',
  592: 'frillish',
  593: 'jellicent',
  594: 'alomomola',
  595: 'joltik',
  596: 'galvantula',
  597: 'ferroseed',
  598: 'ferrothorn',
  599: 'klink',
  6: 'charizard',
  60: 'poliwag',
  600: 'klang',
  601: 'klinkang',
  602: 'tynamo',
  603: 'eelektrik',
  604: 'eelektross',
  605: 'elgyem',
  606: 'beheeyem',
  607: 'litwick',
  608: 'lampent',
  609: 'chandelure',
  61: 'poliwhirl',
  610: 'axew',
  611: 'fraxure',
  612: 'haxorus',
  613: 'cubchoo',
  614: 'beartic',
  615: 'cryogonal',
  616: 'shelmet',
  617: 'accelgor',
  618: 'stunfisk',
  619: 'mienfoo',
  62: 'poliwrath',
  620: 'mienshao',
  621: 'druddigon',
  622: 'golett',
  623: 'golurk',
  624: 'pawniard',
  625: 'bisharp',
  626: 'bouffalant',
  627: 'rufflet',
  628: 'braviary',
  629: 'vullaby',
  63: 'abra',
  630: 'mandibuzz',
  631: 'heatmor',
  632: 'durant',
  633: 'deino',
  634: 'zweilous',
  635: 'hydreigon',
  636: 'larvesta',
  637: 'volcarona',
  638: 'cobalion',
  639: 'terrakion',
  64: 'kadabra',
  640: 'virizion',
  641: 'tornadus',
  642: 'thundurus',
  643: 'reshiram',
  644: 'zekrom',
  645: 'landorus',
  646: 'kyurem',
  647: 'keldeo',
  648: 'meloetta',
  649: 'genesect',
  65: 'alakazam',
  650: 'chespin',
  651: 'quilladin',
  652: 'chesnaught',
  653: 'fennekin',
  654: 'braixen',
  655: 'delphox',
  656: 'froakie',
  657: 'frogradier',
  658: 'greninja',
  659: 'bunnelby',
  66: 'machop',
  660: 'diggersby',
  661: 'fletchling',
  662: 'fletchinder',
  663: 'talonflame',
  664: 'scatterbug',
  665: 'spewpa',
  666: 'vivillon',
  667: 'litleo',
  668: 'pyroar',
  669: 'flabebe',
  67: 'machoke',
  670: 'floette',
  671: 'florges',
  672: 'skiddo',
  673: 'gogoat',
  674: 'pancham',
  675: 'pangoro',
  676: 'furfrou',
  677: 'espurr',
  678: 'meowstic',
  679: 'honedge',
  68: 'machamp',
  680: 'doublade',
  681: 'aegislash',
  682: 'spritzee',
  683: 'aromatisse',
  684: 'swirlix',
  685: 'slurpuff',
  686: 'inkay',
  687: 'malamar',
  688: 'binacle',
  689: 'barbacle',
  69: 'bellsprout',
  690: 'skrelp',
  691: 'dragalge',
  692: 'clauncher',
  693: 'clawitzer',
  694: 'helioptile',
  695: 'heliolisk',
  696: 'tyrunt',
  697: 'tyrantrum',
  698: 'amaura',
  699: 'aurorus',
  7: 'squirtle',
  70: 'weepinbell',
  700: 'sylveon',
  701: 'hawlucha',
  702: 'dedenne',
  703: 'carbink',
  704: 'goomy',
  705: 'sliggoo',
  706: 'goodra',
  707: 'klefki',
  708: 'phantump',
  709: 'trevenant',
  71: 'victreebel',
  710: 'pumpkaboo',
  711: 'gourgeist',
  712: 'bergmite',
  713: 'avalugg',
  714: 'noibat',
  715: 'noivern',
  716: 'xerneas',
  717: 'Yveltal',
  718: 'Zygarde',
  719: 'Diancie',
  72: 'tentacool',
  720: 'hoopa',
  721: 'volcanion',
  73: 'tentacruel',
  74: 'geodude',
  75: 'graveler',
  76: 'golem',
  77: 'ponyta',
  78: 'rapidash',
  79: 'slowpoke',
  8: 'wartortle',
  80: 'slowbro',
  81: 'magnemite',
  82: 'magneton',
  83: "farfetch'd",
  84: 'doduo',
  85: 'dodrio',
  86: 'seel',
  87: 'dewgong',
  88: 'grimer',
  89: 'muk',
  9: 'blastoise',
  90: 'shellder',
  91: 'cloyster',
  92: 'gastly',
  93: 'haunter',
  94: 'gengar',
  95: 'onix',
  96: 'drowzee',
  97: 'hypno',
  98: 'krabby',
  99: 'kingler'
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = {
  'bulbasaur': 1,
  'caterpie': 10,
  'voltorb': 100,
  'electrode': 101,
  'exeggcute': 102,
  'exeggutor': 103,
  'cubone': 104,
  'marowak': 105,
  'hitmonlee': 106,
  'hitmonchan': 107,
  'lickitung': 108,
  'koffing': 109,
  'metapod': 11,
  'weezing': 110,
  'rhyhorn': 111,
  'rhydon': 112,
  'chansey': 113,
  'tangela': 114,
  'kangaskhan': 115,
  'horsea': 116,
  'seadra': 117,
  'goldeen': 118,
  'seaking': 119,
  'butterfree': 12,
  'staryu': 120,
  'starmie': 121,
  'mr. mime': 122,
  'scyther': 123,
  'jynx': 124,
  'electabuzz': 125,
  'magmar': 126,
  'pinsir': 127,
  'tauros': 128,
  'magikarp': 129,
  'weedle': 13,
  'gyarados': 130,
  'lapras': 131,
  'ditto': 132,
  'eevee': 133,
  'vaporeon': 134,
  'jolteon': 135,
  'flareon': 136,
  'porygon': 137,
  'omanyte': 138,
  'omastar': 139,
  'kakuna': 14,
  'kabuto': 140,
  'kabutops': 141,
  'aerodactyl': 142,
  'snorlax': 143,
  'articuno': 144,
  'zapdos': 145,
  'moltres': 146,
  'dratini': 147,
  'dragonair': 148,
  'dragonite': 149,
  'beedrill': 15,
  'mewtwo': 150,
  'mew': 151,
  'chikorita': 152,
  'bayleef': 153,
  'meganium': 154,
  'cyndaquil': 155,
  'quilava': 156,
  'typhlosion': 157,
  'totodile': 158,
  'croconaw': 159,
  'pidgey': 16,
  'feraligatr': 160,
  'sentret': 161,
  'furret': 162,
  'hoothoot': 163,
  'noctowl': 164,
  'ledyba': 165,
  'ledian': 166,
  'spinarak': 167,
  'ariados': 168,
  'crobat': 169,
  'pidgeotto': 17,
  'chinchou': 170,
  'lanturn': 171,
  'pichu': 172,
  'cleffa': 173,
  'igglybuff': 174,
  'togepi': 175,
  'togetic': 176,
  'natu': 177,
  'xatu': 178,
  'mareep': 179,
  'pidgeot': 18,
  'flaaffy': 180,
  'ampharos': 181,
  'bellossom': 182,
  'marill': 183,
  'azumarill': 184,
  'sudowoodo': 185,
  'politoed': 186,
  'hoppip': 187,
  'skiploom': 188,
  'jumpluff': 189,
  'rattata': 19,
  'aipom': 190,
  'sunkern': 191,
  'sunflora': 192,
  'yanma': 193,
  'wooper': 194,
  'quagsire': 195,
  'espeon': 196,
  'umbreon': 197,
  'murkow': 198,
  'slowking': 199,
  'ivysaur': 2,
  'raticate': 20,
  'misdreavus': 200,
  'unown': 201,
  'wobbuffet': 202,
  'girafarig': 203,
  'pineco': 204,
  'forretress': 205,
  'dunsparce': 206,
  'gligar': 207,
  'steelix': 208,
  'snubbull': 209,
  'spearow': 21,
  'granbull': 210,
  'qwilfish': 211,
  'scizor': 212,
  'shuckle': 213,
  'heracross': 214,
  'sneasel': 215,
  'teddiursa': 216,
  'ursaring': 217,
  'slugma': 218,
  'magcargo': 219,
  'fearow': 22,
  'swinub': 220,
  'piloswine': 221,
  'corsola': 222,
  'remoraid': 223,
  'octillery': 224,
  'delibird': 225,
  'mantine': 226,
  'skarmory': 227,
  'houndour': 228,
  'houndoom': 229,
  'ekans': 23,
  'kingdra': 230,
  'phanpy': 231,
  'donphan': 232,
  'porygon2': 233,
  'stantler': 234,
  'smeargle': 235,
  'tyrogue': 236,
  'hitmontop': 237,
  'smoochum': 238,
  'elekid': 239,
  'arbok': 24,
  'magby': 240,
  'miltank': 241,
  'blissey': 242,
  'raikou': 243,
  'entei': 244,
  'suicine': 245,
  'larvitar': 246,
  'pupitar': 247,
  'tyranitar': 248,
  'lugia': 249,
  'pikachu': 25,
  'ho-oh': 250,
  'Celebi': 251,
  'treecko': 252,
  'grovyle': 253,
  'sceptile': 254,
  'torchic': 255,
  'combusken': 256,
  'blaziken': 257,
  'mudkip': 258,
  'marshtomp': 259,
  'raichu': 26,
  'swampert': 260,
  'poochyena': 261,
  'mightyena': 262,
  'zigzagoon': 263,
  'linoone': 264,
  'wurmple': 265,
  'silcoon': 266,
  'beautifly': 267,
  'cascoon': 268,
  'dustox': 269,
  'sandshrew': 27,
  'lotad': 270,
  'lombre': 271,
  'ludicolo': 272,
  'seedot': 273,
  'nuzleaf': 274,
  'shiftry': 275,
  'taillow': 276,
  'swellow': 277,
  'wingull': 278,
  'pelliper': 279,
  'sandslash': 28,
  'ralts': 280,
  'kirlia': 281,
  'gardevoir': 282,
  'surskit': 283,
  'masquerain': 284,
  'shroomish': 285,
  'breloom': 286,
  'slakoth': 287,
  'vigoroth': 288,
  'slaking': 289,
  'nidoran': 29,
  'nincada': 290,
  'ninjask': 291,
  'shedinja': 292,
  'whismur': 293,
  'loudred': 294,
  'exploud': 295,
  'makuhita': 296,
  'hariyama': 297,
  'azurill': 298,
  'nosepass': 299,
  'venusaur': 3,
  'nidorina': 30,
  'skitty': 300,
  'delcatty': 301,
  'sableye': 302,
  'mawile': 303,
  'aron': 304,
  'lairon': 305,
  'aggron': 306,
  'meditite': 307,
  'medicham': 308,
  'electrike': 309,
  'nidoqueen': 31,
  'manectric': 310,
  'plusle': 311,
  'minun': 312,
  'volbeat': 313,
  'illumise': 314,
  'roselia': 315,
  'gulpin': 316,
  'swalot': 317,
  'carvanha': 318,
  'sharpedo': 319,
  'nidoran': 32,
  'wailmer': 320,
  'wailord': 321,
  'numel': 322,
  'camerupt': 323,
  'torkoal': 324,
  'spoink': 325,
  'grumpig': 326,
  'spinda': 327,
  'trapinch': 328,
  'vibrava': 329,
  'nidorino': 33,
  'flygon': 330,
  'cacnea': 331,
  'cacturne': 332,
  'swablu': 333,
  'altaria': 334,
  'zangoose': 335,
  'seviper': 336,
  'lunatone': 337,
  'solrock': 338,
  'barboach': 339,
  'nidoking': 34,
  'whiscash': 340,
  'corphish': 341,
  'crawdaunt': 342,
  'baltoy': 343,
  'claydol': 344,
  'lileep': 345,
  'cradily': 346,
  'anorith': 347,
  'armaldo': 348,
  'feebas': 349,
  'clefairy': 35,
  'milotic': 350,
  'castform': 351,
  'kecleon': 352,
  'shuppet': 353,
  'banette': 354,
  'duskull': 355,
  'dusclops': 356,
  'tropius': 357,
  'chimecho': 358,
  'absol': 359,
  'clefable': 36,
  'wynaut': 360,
  'snorunt': 361,
  'glalie': 362,
  'spheal': 363,
  'sealeo': 364,
  'walrein': 365,
  'clamperl': 366,
  'huntail': 367,
  'gorebyss': 368,
  'relicanth': 369,
  'vulpix': 37,
  'luvdisc': 370,
  'bagon': 371,
  'shelgon': 372,
  'salamence': 373,
  'beldum': 374,
  'metang': 375,
  'metagross': 376,
  'regirock': 377,
  'regice': 378,
  'registeel': 379,
  'ninetales': 38,
  'latias': 380,
  'latios': 381,
  'kyogre': 382,
  'groudon': 383,
  'rayquaza': 384,
  'jirachi': 385,
  'deoxys': 386,
  'turtwig': 387,
  'grotle': 388,
  'torterra': 389,
  'jigglypuff': 39,
  'chimchar': 390,
  'monferno': 391,
  'infernape': 392,
  'piplup': 393,
  'prinplup': 394,
  'empoleon': 395,
  'starly': 396,
  'staravia': 397,
  'staraptor': 398,
  'bidoof': 399,
  'charmander': 4,
  'wigglytuff': 40,
  'bibarel': 400,
  'kricketot': 401,
  'kricketune': 402,
  'shinx': 403,
  'luxio': 404,
  'luxray': 405,
  'budew': 406,
  'roserade': 407,
  'cranidos': 408,
  'rampardos': 409,
  'zubat': 41,
  'shieldon': 410,
  'bastiodon': 411,
  'burmy': 412,
  'wormadam': 413,
  'mothim': 414,
  'combee': 415,
  'vespiquen': 416,
  'pachirisu': 417,
  'buizel': 418,
  'floatzel': 419,
  'golbat': 42,
  'cherubi': 420,
  'cherrim': 421,
  'shellos': 422,
  'gastrodon': 423,
  'ambipon': 424,
  'drifloon': 425,
  'drifblim': 426,
  'buneary': 427,
  'lopunny': 428,
  'mismagius': 429,
  'oddish': 43,
  'honchkrow': 430,
  'glameow': 431,
  'purugly': 432,
  'chingling': 433,
  'stunky': 434,
  'skuntank': 435,
  'bronzor': 436,
  'bronzong': 437,
  'bonsly': 438,
  'mime jr.': 439,
  'gloom': 44,
  'happiny': 440,
  'chatot': 441,
  'spiritomb': 442,
  'gible': 443,
  'gabite': 444,
  'garchomp': 445,
  'munchlax': 446,
  'riolu': 447,
  'lucario': 448,
  'hippopotas': 449,
  'vileplume': 45,
  'hippowdon': 450,
  'skorupi': 451,
  'drapion': 452,
  'croagunk': 453,
  'toxicroak': 454,
  'carnivine': 455,
  'finneon': 456,
  'lumineon': 457,
  'mantyke': 458,
  'snover': 459,
  'paras': 46,
  'abomasnow': 460,
  'weavile': 461,
  'magnezone': 462,
  'licklicky': 463,
  'rhyperior': 464,
  'tangrowth': 465,
  'electivire': 466,
  'magmortar': 467,
  'togekiss': 468,
  'yanmega': 469,
  'parasect': 47,
  'leafeon': 470,
  'glaceon': 471,
  'gliscor': 472,
  'mamoswine': 473,
  'porygon-z': 474,
  'gallade': 475,
  'probopass': 476,
  'dusknoir': 477,
  'froslass': 478,
  'rotom': 479,
  'venonat': 48,
  'uxie': 480,
  'mesprit': 481,
  'azelf': 482,
  'dialga': 483,
  'palkia': 484,
  'heatran': 485,
  'regigigas': 486,
  'giratina': 487,
  'cresselia': 488,
  'phione': 489,
  'venomoth': 49,
  'hippopotas': 490,
  'darkrai': 491,
  'shaymin': 492,
  'arceus': 493,
  'victini': 494,
  'snivy': 495,
  'servine': 496,
  'serperior': 497,
  'tepig': 498,
  'pignite': 499,
  'charmeleon': 5,
  'diglett': 50,
  'emboar': 500,
  'oshawott': 501,
  'dewott': 502,
  'samurott': 503,
  'patrat': 504,
  'watchog': 505,
  'lillipup': 506,
  'herdier': 507,
  'stoutland': 508,
  'purrlion': 509,
  'dugtrio': 51,
  'liepard': 510,
  'pansage': 511,
  'simisage': 512,
  'pansear': 513,
  'simisear': 514,
  'panpour': 515,
  'simipour': 516,
  'munna': 517,
  'musharna': 518,
  'pidove': 519,
  'meowth': 52,
  'tranquil': 520,
  'unfezant': 521,
  'blitzle': 522,
  'zebstrika': 523,
  'roggenrola': 524,
  'boldore': 525,
  'gigalith': 526,
  'woobat': 527,
  'swoobat': 528,
  'drilbur': 529,
  'persian': 53,
  'excadrill': 530,
  'audino': 531,
  'timburr': 532,
  'gurdurr': 533,
  'conkeldurr': 534,
  'tympole': 535,
  'palpitoad': 536,
  'seismitoad': 537,
  'throh': 538,
  'sawk': 539,
  'psyduck': 54,
  'sewaddle': 540,
  'swadloon': 541,
  'leavanny': 542,
  'venipede': 543,
  'whirlipede': 544,
  'scolipede': 545,
  'cottonee': 546,
  'Whimsicott': 547,
  'Petilil': 548,
  'lilligant': 549,
  'golduck': 55,
  'basculin': 550,
  'sandile': 551,
  'krokorok': 552,
  'krookodile': 553,
  'darumaka': 554,
  'darmanitan': 555,
  'maractus': 556,
  'dwebble': 557,
  'crustle': 558,
  'scraggy': 559,
  'mankey': 56,
  'scrafty': 560,
  'sigilyph': 561,
  'yamask': 562,
  'cofagrigus': 563,
  'tirtouga': 564,
  'carracosta': 565,
  'archen': 566,
  'archeops': 567,
  'trubbish': 568,
  'garbodor': 569,
  'primeape': 57,
  'zorua': 570,
  'zoroark': 571,
  'minccino': 572,
  'cinccino': 573,
  'gothita': 574,
  'gothorita': 575,
  'gothitelle': 576,
  'solosis': 577,
  'duosion': 578,
  'reuniclus': 579,
  'growlithe': 58,
  'ducklett': 580,
  'swanna': 581,
  'vanillite': 582,
  'vanillish': 583,
  'vanilluxe': 584,
  'deerling': 585,
  'sawsbuck': 586,
  'emolga': 587,
  'karrablast': 588,
  'escavalier': 589,
  'arcanine': 59,
  'foongus': 590,
  'amoonguss': 591,
  'frillish': 592,
  'jellicent': 593,
  'alomomola': 594,
  'joltik': 595,
  'galvantula': 596,
  'ferroseed': 597,
  'ferrothorn': 598,
  'klink': 599,
  'charizard': 6,
  'poliwag': 60,
  'klang': 600,
  'klinkang': 601,
  'tynamo': 602,
  'eelektrik': 603,
  'eelektross': 604,
  'elgyem': 605,
  'beheeyem': 606,
  'litwick': 607,
  'lampent': 608,
  'chandelure': 609,
  'poliwhirl': 61,
  'axew': 610,
  'fraxure': 611,
  'haxorus': 612,
  'cubchoo': 613,
  'beartic': 614,
  'cryogonal': 615,
  'shelmet': 616,
  'accelgor': 617,
  'stunfisk': 618,
  'mienfoo': 619,
  'poliwrath': 62,
  'mienshao': 620,
  'druddigon': 621,
  'golett': 622,
  'golurk': 623,
  'pawniard': 624,
  'bisharp': 625,
  'bouffalant': 626,
  'rufflet': 627,
  'braviary': 628,
  'vullaby': 629,
  'abra': 63,
  'mandibuzz': 630,
  'heatmor': 631,
  'durant': 632,
  'deino': 633,
  'zweilous': 634,
  'hydreigon': 635,
  'larvesta': 636,
  'volcarona': 637,
  'cobalion': 638,
  'terrakion': 639,
  'kadabra': 64,
  'virizion': 640,
  'tornadus': 641,
  'thundurus': 642,
  'reshiram': 643,
  'zekrom': 644,
  'landorus': 645,
  'kyurem': 646,
  'keldeo': 647,
  'meloetta': 648,
  'genesect': 649,
  'alakazam': 65,
  'chespin': 650,
  'quilladin': 651,
  'chesnaught': 652,
  'fennekin': 653,
  'braixen': 654,
  'delphox': 655,
  'froakie': 656,
  'frogradier': 657,
  'greninja': 658,
  'bunnelby': 659,
  'machop': 66,
  'diggersby': 660,
  'fletchling': 661,
  'fletchinder': 662,
  'talonflame': 663,
  'scatterbug': 664,
  'spewpa': 665,
  'vivillon': 666,
  'litleo': 667,
  'pyroar': 668,
  'flabebe': 669,
  'machoke': 67,
  'floette': 670,
  'florges': 671,
  'skiddo': 672,
  'gogoat': 673,
  'pancham': 674,
  'pangoro': 675,
  'furfrou': 676,
  'espurr': 677,
  'meowstic': 678,
  'honedge': 679,
  'machamp': 68,
  'doublade': 680,
  'aegislash': 681,
  'spritzee': 682,
  'aromatisse': 683,
  'swirlix': 684,
  'slurpuff': 685,
  'inkay': 686,
  'malamar': 687,
  'binacle': 688,
  'barbacle': 689,
  'bellsprout': 69,
  'skrelp': 690,
  'dragalge': 691,
  'clauncher': 692,
  'clawitzer': 693,
  'helioptile': 694,
  'heliolisk': 695,
  'tyrunt': 696,
  'tyrantrum': 697,
  'amaura': 698,
  'aurorus': 699,
  'squirtle': 7,
  'weepinbell': 70,
  'sylveon': 700,
  'hawlucha': 701,
  'dedenne': 702,
  'carbink': 703,
  'goomy': 704,
  'sliggoo': 705,
  'goodra': 706,
  'klefki': 707,
  'phantump': 708,
  'trevenant': 709,
  'victreebel': 71,
  'pumpkaboo': 710,
  'gourgeist': 711,
  'bergmite': 712,
  'avalugg': 713,
  'noibat': 714,
  'noivern': 715,
  'xerneas': 716,
  'Yveltal': 717,
  'Zygarde': 718,
  'Diancie': 719,
  'tentacool': 72,
  'hoopa': 720,
  'volcanion': 721,
  'tentacruel': 73,
  'geodude': 74,
  'graveler': 75,
  'golem': 76,
  'ponyta': 77,
  'rapidash': 78,
  'slowpoke': 79,
  'wartortle': 8,
  'slowbro': 80,
  'magnemite': 81,
  'magneton': 82,
  "farfetch'd": 83,
  'doduo': 84,
  'dodrio': 85,
  'seel': 86,
  'dewgong': 87,
  'grimer': 88,
  'muk': 89,
  'blastoise': 9,
  'shellder': 90,
  'cloyster': 91,
  'gastly': 92,
  'haunter': 93,
  'gengar': 94,
  'onix': 95,
  'drowzee': 96,
  'hypno': 97,
  'krabby': 98,
  'kingler': 99
}


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(10);
} else {
  module.exports = __webpack_require__(11);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(6);

var _react2 = _interopRequireDefault(_react);

var _pokemonGif = __webpack_require__(7);

var _pokemonGif2 = _interopRequireDefault(_pokemonGif);

var _pokemonProp = __webpack_require__(8);

var _pokemonProp2 = _interopRequireDefault(_pokemonProp);

var _propTypes = __webpack_require__(9);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _pokedexNumberToName = __webpack_require__(1);

var _pokedexNumberToName2 = _interopRequireDefault(_pokedexNumberToName);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PokeSprite = function (_React$Component) {
	_inherits(PokeSprite, _React$Component);

	function PokeSprite() {
		_classCallCheck(this, PokeSprite);

		return _possibleConstructorReturn(this, (PokeSprite.__proto__ || Object.getPrototypeOf(PokeSprite)).apply(this, arguments));
	}

	_createClass(PokeSprite, [{
		key: 'render',
		value: function render() {
			var _props = this.props,
			    pokemon = _props.pokemon,
			    className = _props.className;

			var name = typeof pokemon === 'string' ? pokemon : _pokedexNumberToName2.default[pokemon];

			if (!this.gifUrl) {
				return null;
			}

			return _react2.default.createElement('img', {
				src: this.gifUrl,
				alt: name,
				className: className
			});
		}
	}, {
		key: 'gifUrl',
		get: function get() {
			var _props2 = this.props,
			    pokemon = _props2.pokemon,
			    className = _props2.className;

			var name = typeof pokemon === 'string' ? pokemon : _pokedexNumberToName2.default[pokemon];
			var url = '';
			try {
				url = (0, _pokemonGif2.default)(name);
			} catch (e) {
				console.log(e);
				url = '';
			}
			return url;
		}
	}]);

	return PokeSprite;
}(_react2.default.Component);

PokeSprite.defaultProps = {
	className: ''
};

PokeSprite.propTypes = {
	pokemon: _pokemonProp2.default.isRequired,
	className: _propTypes2.default.string
};

exports.default = PokeSprite;

/***/ }),
/* 6 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var pokedexNumberToName = __webpack_require__(1);
var pokemonNameToNumber = __webpack_require__(3);

var baseUrl = 'http://www.pokestadium.com/sprites/xy/';
var extension = '.gif';

function getGifByPokedexNumber(pokedexNumber) {
  if (pokedexNumberToName.hasOwnProperty(pokedexNumber)) {
    var pokemonUrlName = pokedexNumberToName[pokedexNumber]
      .toString()
      .replace(/\./g,'')
      .replace(/'/g,'')
      .replace(/\s/g, "-");

    return baseUrl + pokemonUrlName + extension;
  } else {
    throw new Error('Invalid pokedex number ' +  pokedexNumber);
  }
}

function getGifByPokemonName(pokemonName) {
  var lowercasePokemonName = pokemonName.toLowerCase();

  if (pokemonNameToNumber.hasOwnProperty(lowercasePokemonName)) {
    var pokemonUrlName = lowercasePokemonName
      .replace(/\./g,'')
      .replace(/'/g,'')
      .replace(/\s/g, "-");

    return baseUrl + pokemonUrlName + extension;
  } else {
    throw new Error('Invalid pokemon name "' + pokemonName + '"');
  }
}

function pokemonGif(identifier) {
  if (typeof identifier === 'string') {
    return getGifByPokemonName(identifier);
  } else if (typeof identifier === 'number') {
    return getGifByPokedexNumber(identifier);
  } else {
    throw new TypeError('pokemonGif input must be type string or number');
  }
}

module.exports = pokemonGif;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _pokedexNumberToName = __webpack_require__(1);

var _pokedexNumberToName2 = _interopRequireDefault(_pokedexNumberToName);

var _pokemonNameToNumber = __webpack_require__(3);

var _pokemonNameToNumber2 = _interopRequireDefault(_pokemonNameToNumber);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createValidatorWithRequired(validator) {
  var chainValidatorWithIsRequired = function chainValidatorWithIsRequired(isRequired, props, propName, componentName, location) {
    if (isRequired && props[propName] == null) {
      return new Error('Required prop `' + propName + '` was not specified in `' + componentName + '`.');
    }

    return validator(props, propName, componentName, location);
  };

  var validatorWithIsRequired = chainValidatorWithIsRequired.bind(null, false);
  validatorWithIsRequired.isRequired = chainValidatorWithIsRequired.bind(null, true);

  return validatorWithIsRequired;
}

function pokemonValidator(props, propName, componentName) {
  var prop = props[propName];

  if (typeof prop === 'string') {
    if (!_pokemonNameToNumber2.default.hasOwnProperty(prop.toLowerCase())) {
      return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`.\n        Prop `' + propName + '` must be a valid pokemon name.');
    }

    return null;
  } else if (typeof prop === 'number') {
    if (!_pokedexNumberToName2.default.hasOwnProperty(prop)) {
      return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`.\n        Prop `' + propName + '` must be a valid pokedex number.');
    }

    return null;
  }

  return new Error('Invalid prop `' + propName + '` supplied to `' + componentName + '`.\n    Prop `' + propName + '` must be of type string or number.');
}

exports.default = createValidatorWithRequired(pokemonValidator);

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var ReactIs = __webpack_require__(4);

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(12)(ReactIs.isElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(15)();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.3
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

Object.defineProperty(exports,"__esModule",{value:!0});
var b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?Symbol.for("react.memo"):
60115,r=b?Symbol.for("react.lazy"):60116;function t(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;
exports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||"object"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};
exports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};
exports.isSuspense=function(a){return t(a)===p};


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.8.3
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' ||
  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;
    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;
          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;
              default:
                return $$typeof;
            }
        }
      case REACT_LAZY_TYPE:
      case REACT_MEMO_TYPE:
      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
}

// AsyncMode is deprecated along with isAsyncMode
var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;

var hasWarnedAboutDeprecatedIsAsyncMode = false;

// AsyncMode should be deprecated
function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true;
      lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }
  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.typeOf = typeOf;
exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isValidElementType = isValidElementType;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(4);
var assign = __webpack_require__(13);

var ReactPropTypesSecret = __webpack_require__(2);
var checkPropTypes = __webpack_require__(14);

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (process.env.NODE_ENV !== 'production') {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (process.env.NODE_ENV !== 'production') {
  var ReactPropTypesSecret = __webpack_require__(2);
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (process.env.NODE_ENV !== 'production') {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(2);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ })
/******/ ]);